{"version":3,"sources":["x2js.js"],"sourcesContent":["/*\r\n\tCopyright 2015 Axinom\r\n\tCopyright 2011-2013 Abdulla Abdurakhmanov\r\n\tOriginal sources are available at https://code.google.com/p/x2js/\r\n\r\n\tLicensed under the Apache License, Version 2.0 (the \"License\");\r\n\tyou may not use this file except in compliance with the License.\r\n\tYou may obtain a copy of the License at\r\n\r\n\thttp://www.apache.org/licenses/LICENSE-2.0\r\n\r\n\tUnless required by applicable law or agreed to in writing, software\r\n\tdistributed under the License is distributed on an \"AS IS\" BASIS,\r\n\tWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n\tSee the License for the specific language governing permissions and\r\n\tlimitations under the License.\r\n*/\r\n\r\n/*\r\n\tSupported export methods:\r\n\t* AMD\r\n\t* <script> (window.X2JS)\r\n\t* Node.js\r\n\r\n\tLimitations:\r\n\t* Attribute namespace prefixes are not parsed as such.\r\n\t* Overall the serialization/deserializaton code is \"best effort\" and not foolproof.\r\n*/\r\n\r\n// Module definition pattern used is returnExports from https://github.com/umdjs/umd\r\n(function (root, factory) {\r\n\t\"use strict\";\r\n\r\n\t/* global define */\r\n\tif (typeof define === 'function' && define.amd) {\r\n\t\t// AMD. Register as an anonymous module.\r\n\t\tdefine([], factory);\r\n\t} else if (typeof module === 'object' && module.exports) {\r\n\t\t// Node. Does not work with strict CommonJS, but only CommonJS-like\r\n\t\t// environments that support module.exports, like Node.\r\n\t\tmodule.exports = factory(require(\"xmldom\").DOMParser);\r\n\t} else {\r\n\t\t// Browser globals (root is window)\r\n\t\troot.X2JS = factory();\r\n\t}\r\n})(this, function (CustomDOMParser) {\r\n\t\"use strict\";\r\n\r\n\t// We return a constructor that can be used to make X2JS instances.\r\n\treturn function X2JS(config) {\r\n\t\tvar VERSION = \"3.4.0\";\r\n\r\n\t\tconfig = config || {};\r\n\r\n\t\tfunction initConfigDefaults() {\r\n\t\t\t// If set to \"property\" then <element>_asArray will be created\r\n\t\t\t// to allow you to access any element as an array (even if there is only one of it).\r\n\t\t\tconfig.arrayAccessForm = config.arrayAccessForm || \"none\";\r\n\r\n\t\t\t// If \"text\" then <empty></empty> will be transformed to \"\".\r\n\t\t\t// If \"object\" then <empty></empty> will be transformed to {}.\r\n\t\t\tconfig.emptyNodeForm = config.emptyNodeForm || \"text\";\r\n\r\n\t\t\t// Function that will be called for each elements, if the function returns true, the element will be skipped\r\n\t\t\t// function(name, value) { return true; };\r\n\t\t\tconfig.jsAttributeFilter = config.jsAttributeFilter;\r\n\r\n\t\t\t// Function that will be called for each elements, the element value will be replaced by the returned value\r\n\t\t\t// function(name, value) { return parseFloat(value); };\r\n\t\t\tconfig.jsAttributeConverter = config.jsAttributeConverter;\r\n\r\n\t\t\t// Allows attribute values to be converted on the fly during parsing to objects.\r\n\t\t\t// \t\"test\": function(name, value) { return true; }\r\n\t\t\t//\t\"convert\": function(name, value) { return parseFloat(value); };\r\n\t\t\t// convert() will be called for every attribute where test() returns true\r\n\t\t\t// and the return value from convert() will replace the original value of the attribute.\r\n\t\t\tconfig.attributeConverters = config.attributeConverters || [];\r\n\r\n\t\t\t// Any elements that match the paths here will have their text parsed\r\n\t\t\t// as an XML datetime value (2011-11-12T13:00:00-07:00 style).\r\n\t\t\t// The path can be a plain string (parent.child1.child2),\r\n\t\t\t// a regex (/.*\\.child2/) or function(elementPath).\r\n\t\t\tconfig.datetimeAccessFormPaths = config.datetimeAccessFormPaths || [];\r\n\r\n\t\t\t// Any elements that match the paths listed here will be stored in JavaScript objects\r\n\t\t\t// as arrays even if there is only one of them. The path can be a plain string\r\n\t\t\t// (parent.child1.child2), a regex (/.*\\.child2/) or function(elementName, elementPath).\r\n\t\t\tconfig.arrayAccessFormPaths = config.arrayAccessFormPaths || [];\r\n\r\n            // xmldom constructor arguments\r\n            // @see https://github.com/jindw/xmldom#api-reference\r\n\t\t\tconfig.xmldomOptions = config.xmldomOptions || {};\r\n\r\n\t\t\t// If true, a toString function is generated to print nodes containing text or cdata.\r\n\t\t\t// Useful if you want to accept both plain text and CData as equivalent inputs.\r\n\t\t\tif (config.enableToStringFunc === undefined) {\r\n\t\t\t\tconfig.enableToStringFunc = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, empty text tags are ignored for elements with child nodes.\r\n\t\t\tif (config.skipEmptyTextNodesForObj === undefined) {\r\n\t\t\t\tconfig.skipEmptyTextNodesForObj = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, whitespace is trimmed from text nodes.\r\n\t\t\tif (config.stripWhitespaces === undefined) {\r\n\t\t\t\tconfig.stripWhitespaces = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, double quotes are used in generated XML.\r\n\t\t\tif (config.useDoubleQuotes === undefined) {\r\n\t\t\t\tconfig.useDoubleQuotes = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, the root element of the XML document is ignored when converting to objects.\r\n\t\t\t// The result will directly have the root element's children as its own properties.\r\n\t\t\tif (config.ignoreRoot === undefined) {\r\n\t\t\t\tconfig.ignoreRoot = false;\r\n\t\t\t}\r\n\r\n\t\t\t// Whether XML characters in text are escaped when reading/writing XML.\r\n\t\t\tif (config.escapeMode === undefined) {\r\n\t\t\t\tconfig.escapeMode = true;\r\n\t\t\t}\r\n\r\n\t\t\t// Prefix to use for properties that are created to represent XML attributes.\r\n\t\t\tif (config.attributePrefix === undefined) {\r\n\t\t\t\tconfig.attributePrefix = \"_\";\r\n\t\t\t}\r\n\r\n\t\t\t// If true, empty elements will created as self closing elements (<element />)\r\n\t\t\t// If false, empty elements will be created with start and end tags (<element></element>)\r\n\t\t\tif (config.selfClosingElements === undefined) {\r\n\t\t\t\tconfig.selfClosingElements = true;\r\n\t\t\t}\r\n\r\n\t\t\t// If this property defined as false and an XML element has CData node ONLY, it will be converted to text without additional property \"__cdata\"\r\n\t\t\tif (config.keepCData === undefined) {\r\n\t\t\t\tconfig.keepCData = false;\r\n\t\t\t}\r\n\r\n\t\t\t// If this property defined as true, use { __text: 'abc' } over 'abc'\r\n\t\t\tif (config.keepText === undefined) {\r\n\t\t\t\tconfig.keepText = false;\r\n\t\t\t}\r\n\r\n\t\t\t// If true, will output dates in UTC\r\n\t\t\tif (config.jsDateUTC === undefined) {\r\n\t\t\t\tconfig.jsDateUTC = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction initRequiredPolyfills() {\r\n\t\t\tfunction pad(number) {\r\n\t\t\t\tvar r = String(number);\r\n\t\t\t\tif (r.length === 1) {\r\n\t\t\t\t\tr = '0' + r;\r\n\t\t\t\t}\r\n\t\t\t\treturn r;\r\n\t\t\t}\r\n\t\t\t// Hello IE8-\r\n\t\t\tif (typeof String.prototype.trim !== 'function') {\r\n\t\t\t\tString.prototype.trim = function trim() {\r\n\t\t\t\t\treturn this.replace(/^\\s+|^\\n+|(\\s|\\n)+$/g, '');\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t\tif (typeof Date.prototype.toISOString !== 'function') {\r\n\t\t\t\t// Implementation from http://stackoverflow.com/questions/2573521/how-do-i-output-an-iso-8601-formatted-string-in-javascript\r\n\t\t\t\tDate.prototype.toISOString = function toISOString() {\r\n\t\t\t\t\tvar MS_IN_S = 1000;\r\n\r\n\t\t\t\t\treturn this.getUTCFullYear()\r\n\t\t\t\t\t\t+ '-' + pad(this.getUTCMonth() + 1)\r\n\t\t\t\t\t\t+ '-' + pad(this.getUTCDate())\r\n\t\t\t\t\t\t+ 'T' + pad(this.getUTCHours())\r\n\t\t\t\t\t\t+ ':' + pad(this.getUTCMinutes())\r\n\t\t\t\t\t\t+ ':' + pad(this.getUTCSeconds())\r\n\t\t\t\t\t\t+ '.' + String((this.getUTCMilliseconds() / MS_IN_S).toFixed(3)).slice(2, 5)\r\n\t\t\t\t\t\t+ 'Z';\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tinitConfigDefaults();\r\n\t\tinitRequiredPolyfills();\r\n\r\n\t\tvar DOMNodeTypes = {\r\n\t\t\t\"ELEMENT_NODE\": 1,\r\n\t\t\t\"TEXT_NODE\": 3,\r\n\t\t\t\"CDATA_SECTION_NODE\": 4,\r\n\t\t\t\"COMMENT_NODE\": 8,\r\n\t\t\t\"DOCUMENT_NODE\": 9\r\n\t\t};\r\n\r\n\t\tfunction getDomNodeLocalName(domNode) {\r\n\t\t\tvar localName = domNode.localName;\r\n\t\t\tif (localName == null) {\r\n\t\t\t\t// Yeah, this is IE!!\r\n\t\t\t\tlocalName = domNode.baseName;\r\n\t\t\t}\r\n\t\t\tif (localName == null || localName === \"\") {\r\n\t\t\t\t// ===\"\" is IE too\r\n\t\t\t\tlocalName = domNode.nodeName;\r\n\t\t\t}\r\n\t\t\treturn localName;\r\n\t\t}\r\n\r\n\t\tfunction getDomNodeNamespacePrefix(node) {\r\n\t\t\treturn node.prefix;\r\n\t\t}\r\n\r\n\t\tfunction escapeXmlChars(str) {\r\n\t\t\tif (typeof str === \"string\")\r\n\t\t\t\treturn str.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;').replace(/\"/g, '&quot;').replace(/'/g, '&#x27;');\r\n\t\t\telse\r\n\t\t\t\treturn str;\r\n\t\t}\r\n\r\n\t\tfunction unescapeXmlChars(str) {\r\n\t\t\treturn str.replace(/&lt;/g, '<').replace(/&gt;/g, '>').replace(/&quot;/g, '\"').replace(/&#x27;/g, \"'\").replace(/&amp;/g, '&');\r\n\t\t}\r\n\r\n\t\tfunction ensureProperArrayAccessForm(element, childName, elementPath) {\r\n\t\t\tswitch (config.arrayAccessForm) {\r\n\t\t\t\tcase \"property\":\r\n\t\t\t\t\tif (!(element[childName] instanceof Array))\r\n\t\t\t\t\t\telement[childName + \"_asArray\"] = [element[childName]];\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\telement[childName + \"_asArray\"] = element[childName];\r\n\t\t\t\t\tbreak;\r\n\t\t\t}\r\n\r\n\t\t\tif (!(element[childName] instanceof Array) && config.arrayAccessFormPaths.length > 0) {\r\n\t\t\t\tvar match = false;\r\n\r\n\t\t\t\tfor (var i = 0; i < config.arrayAccessFormPaths.length; i++) {\r\n\t\t\t\t\tvar arrayPath = config.arrayAccessFormPaths[i];\r\n\t\t\t\t\tif (typeof arrayPath === \"string\") {\r\n\t\t\t\t\t\tif (arrayPath === elementPath) {\r\n\t\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (arrayPath instanceof RegExp) {\r\n\t\t\t\t\t\tif (arrayPath.test(elementPath)) {\r\n\t\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t} else if (typeof arrayPath === \"function\") {\r\n\t\t\t\t\t\tif (arrayPath(childName, elementPath)) {\r\n\t\t\t\t\t\t\tmatch = true;\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (match)\r\n\t\t\t\t\telement[childName] = [element[childName]];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction xmlDateTimeToDate(prop) {\r\n\t\t\t// Implementation based up on http://stackoverflow.com/questions/8178598/xml-datetime-to-javascript-date-object\r\n\t\t\t// Improved to support full spec and optional parts\r\n\t\t\tvar MINUTES_PER_HOUR = 60;\r\n\r\n\t\t\tvar bits = prop.split(/[-T:+Z]/g);\r\n\r\n\t\t\tvar d = new Date(bits[0], bits[1] - 1, bits[2]);\r\n\t\t\tvar secondBits = bits[5].split(\"\\.\");\r\n\t\t\td.setHours(bits[3], bits[4], secondBits[0]);\r\n\t\t\tif (secondBits.length > 1)\r\n\t\t\t\td.setMilliseconds(secondBits[1]);\r\n\r\n\t\t\t// Get supplied time zone offset in minutes\r\n\t\t\tif (bits[6] && bits[7]) {\r\n\t\t\t\tvar offsetMinutes = bits[6] * MINUTES_PER_HOUR + Number(bits[7]);\r\n\t\t\t\tvar sign = /\\d\\d-\\d\\d:\\d\\d$/.test(prop) ? '-' : '+';\r\n\r\n\t\t\t\t// Apply the sign\r\n\t\t\t\toffsetMinutes = 0 + (sign === '-' ? -1 * offsetMinutes : offsetMinutes);\r\n\r\n\t\t\t\t// Apply offset and local timezone\r\n\t\t\t\td.setMinutes(d.getMinutes() - offsetMinutes - d.getTimezoneOffset());\r\n\t\t\t} else if (prop.indexOf(\"Z\", prop.length - 1) !== -1) {\r\n\t\t\t\td = new Date(Date.UTC(d.getFullYear(), d.getMonth(), d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds(), d.getMilliseconds()));\r\n\t\t\t}\r\n\r\n\t\t\t// d is now a local time equivalent to the supplied time\r\n\t\t\treturn d;\r\n\t\t}\r\n\r\n\t\tfunction convertToDateIfRequired(value, childName, fullPath) {\r\n\t\t\tif (config.datetimeAccessFormPaths.length > 0) {\r\n\t\t\t\tvar pathWithoutTextNode = fullPath.split(\"\\.#\")[0];\r\n\r\n\t\t\t\tfor (var i = 0; i < config.datetimeAccessFormPaths.length; i++) {\r\n\t\t\t\t\tvar candidatePath = config.datetimeAccessFormPaths[i];\r\n\t\t\t\t\tif (typeof candidatePath === \"string\") {\r\n\t\t\t\t\t\tif (candidatePath === pathWithoutTextNode)\r\n\t\t\t\t\t\t\treturn xmlDateTimeToDate(value);\r\n\t\t\t\t\t} else if (candidatePath instanceof RegExp) {\r\n\t\t\t\t\t\tif (candidatePath.test(pathWithoutTextNode))\r\n\t\t\t\t\t\t\treturn xmlDateTimeToDate(value);\r\n\t\t\t\t\t} else if (typeof candidatePath === \"function\") {\r\n\t\t\t\t\t\tif (candidatePath(pathWithoutTextNode))\r\n\t\t\t\t\t\t\treturn xmlDateTimeToDate(value);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn value;\r\n\t\t}\r\n\r\n\t\tfunction deserializeRootElementChildren(rootElement) {\r\n\t\t\tvar result = {};\r\n\t\t\tvar children = rootElement.childNodes;\r\n\r\n\t\t\t// Alternative for firstElementChild which is not supported in some environments\r\n\t\t\tfor (var i = 0; i < children.length; i++) {\r\n\t\t\t\tvar child = children.item(i);\r\n\t\t\t\tif (child.nodeType === DOMNodeTypes.ELEMENT_NODE) {\r\n\t\t\t\t\tvar childName = getDomNodeLocalName(child);\r\n\r\n\t\t\t\t\tif (config.ignoreRoot)\r\n\t\t\t\t\t\tresult = deserializeDomChildren(child, childName);\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tresult[childName] = deserializeDomChildren(child, childName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction deserializeElementChildren(element, elementPath) {\r\n\t\t\tvar result = {};\r\n\t\t\tresult.__cnt = 0;\r\n\r\n\t\t\tvar nodeChildren = element.childNodes;\r\n\r\n\t\t\t// Child nodes.\r\n\t\t\tfor (var iChild = 0; iChild < nodeChildren.length; iChild++) {\r\n\t\t\t\tvar child = nodeChildren.item(iChild);\r\n\t\t\t\tvar childName = getDomNodeLocalName(child);\r\n\r\n\t\t\t\tif (child.nodeType === DOMNodeTypes.COMMENT_NODE)\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\tresult.__cnt++;\r\n\r\n\t\t\t\t// We deliberately do not accept everything falsey here because\r\n\t\t\t\t// elements that resolve to empty string should still be preserved.\r\n\t\t\t\tif (result[childName] == null) {\r\n\t\t\t\t\tresult[childName] = deserializeDomChildren(child, elementPath + \".\" + childName);\r\n\t\t\t\t\tensureProperArrayAccessForm(result, childName, elementPath + \".\" + childName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif (!(result[childName] instanceof Array)) {\r\n\t\t\t\t\t\tresult[childName] = [result[childName]];\r\n\t\t\t\t\t\tensureProperArrayAccessForm(result, childName, elementPath + \".\" + childName);\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tresult[childName][result[childName].length] = deserializeDomChildren(child, elementPath + \".\" + childName);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t// Attributes\r\n\t\t\tfor (var iAttribute = 0; iAttribute < element.attributes.length; iAttribute++) {\r\n\t\t\t\tvar attribute = element.attributes.item(iAttribute);\r\n\t\t\t\tresult.__cnt++;\r\n\r\n\t\t\t\tvar adjustedValue = attribute.value;\r\n\t\t\t\tfor (var iConverter = 0; iConverter < config.attributeConverters.length; iConverter++) {\r\n\t\t\t\t\tvar converter = config.attributeConverters[iConverter];\r\n\t\t\t\t\tif (converter.test.call(null, attribute.name, attribute.value))\r\n\t\t\t\t\t\tadjustedValue = converter.convert.call(null, attribute.name, attribute.value);\r\n\t\t\t\t}\r\n\r\n\t\t\t\tresult[config.attributePrefix + attribute.name] = adjustedValue;\r\n\t\t\t}\r\n\r\n\t\t\t// Node namespace prefix\r\n\t\t\tvar namespacePrefix = getDomNodeNamespacePrefix(element);\r\n\t\t\tif (namespacePrefix) {\r\n\t\t\t\tresult.__cnt++;\r\n\t\t\t\tresult.__prefix = namespacePrefix;\r\n\t\t\t}\r\n\r\n\t\t\tif (result[\"#text\"]) {\r\n\t\t\t\tresult.__text = result[\"#text\"];\r\n\r\n\t\t\t\tif (result.__text instanceof Array) {\r\n\t\t\t\t\tresult.__text = result.__text.join(\"\\n\");\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif (config.escapeMode)\r\n\t\t\t\t\tresult.__text = unescapeXmlChars(result.__text);\r\n\r\n\t\t\t\tif (config.stripWhitespaces)\r\n\t\t\t\t\tresult.__text = result.__text.trim();\r\n\r\n\t\t\t\tdelete result[\"#text\"];\r\n\r\n\t\t\t\tif (config.arrayAccessForm === \"property\")\r\n\t\t\t\t\tdelete result[\"#text_asArray\"];\r\n\r\n\t\t\t\tresult.__text = convertToDateIfRequired(result.__text, \"#text\", elementPath + \".#text\");\r\n\t\t\t}\r\n\r\n\t\t\tif (result.hasOwnProperty('#cdata-section')) {\r\n\t\t\t\tresult.__cdata = result[\"#cdata-section\"];\r\n\t\t\t\tdelete result[\"#cdata-section\"];\r\n\r\n\t\t\t\tif (config.arrayAccessForm === \"property\")\r\n\t\t\t\t\tdelete result[\"#cdata-section_asArray\"];\r\n\t\t\t}\r\n\r\n\t\t\tif (result.__cnt === 1 && result.__text && !config.keepText) {\r\n\t\t\t\tresult = result.__text;\r\n\t\t\t} else if (result.__cnt === 0 && config.emptyNodeForm === \"text\") {\r\n\t\t\t\tresult = '';\r\n\t\t\t} else if (result.__cnt > 1 && result.__text !== undefined && config.skipEmptyTextNodesForObj) {\r\n\t\t\t\tif (config.stripWhitespaces && result.__text === \"\" || result.__text.trim() === \"\") {\r\n\t\t\t\t\tdelete result.__text;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tdelete result.__cnt;\r\n\r\n\t\t\t/**\r\n\t\t\t * We are checking if we are creating a __cdata property or if we just add the content of cdata inside result.\r\n\t\t\t * But, if we have a property inside xml tag (<tag PROPERTY=\"1\"></tag>), and a cdata inside, we can't ignore it.\r\n\t\t\t * In this case we are keeping __cdata property.\r\n\t\t\t */\r\n\t\t\tif (!config.keepCData && (!result.hasOwnProperty('__text') && result.hasOwnProperty('__cdata') && Object.keys(result).length === 1)) {\r\n\t\t\t\treturn (result.__cdata ? result.__cdata : '');\r\n\t\t\t}\r\n\r\n\t\t\tif (config.enableToStringFunc && (result.__text || result.__cdata)) {\r\n\t\t\t\tresult.toString = function toString() {\r\n\t\t\t\t\treturn (this.__text ? this.__text : '') + (this.__cdata ? this.__cdata : '');\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction deserializeDomChildren(node, parentPath) {\r\n\t\t\tif (node.nodeType === DOMNodeTypes.DOCUMENT_NODE) {\r\n\t\t\t\treturn deserializeRootElementChildren(node);\r\n\t\t\t} else if (node.nodeType === DOMNodeTypes.ELEMENT_NODE) {\r\n\t\t\t\treturn deserializeElementChildren(node, parentPath);\r\n\t\t\t} else if (node.nodeType === DOMNodeTypes.TEXT_NODE || node.nodeType === DOMNodeTypes.CDATA_SECTION_NODE) {\r\n\t\t\t\treturn node.nodeValue;\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction serializeStartTag(jsObject, elementName, attributeNames, selfClosing) {\r\n\t\t\tvar resultStr = \"<\" + ((jsObject && jsObject.__prefix) ? (jsObject.__prefix + \":\") : \"\") + elementName;\r\n\r\n\t\t\tif (attributeNames) {\r\n\t\t\t\tfor (var i = 0; i < attributeNames.length; i++) {\r\n\t\t\t\t\tvar attributeName = attributeNames[i];\r\n\t\t\t\t\tvar attributeValue = jsObject[attributeName];\r\n\r\n\t\t\t\t\tif (config.escapeMode)\r\n\t\t\t\t\t\tattributeValue = escapeXmlChars(attributeValue);\r\n\r\n\t\t\t\t\tresultStr += \" \" + attributeName.substr(config.attributePrefix.length) + \"=\";\r\n\r\n\t\t\t\t\tif (config.useDoubleQuotes)\r\n\t\t\t\t\t\tresultStr += '\"' + attributeValue + '\"';\r\n\t\t\t\t\telse\r\n\t\t\t\t\t\tresultStr += \"'\" + attributeValue + \"'\";\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif (!selfClosing)\r\n\t\t\t\tresultStr += \">\";\r\n\t\t\telse\r\n\t\t\t\tresultStr += \" />\";\r\n\r\n\t\t\treturn resultStr;\r\n\t\t}\r\n\r\n\t\tfunction serializeEndTag(jsObject, elementName) {\r\n\t\t\treturn \"</\" + ((jsObject && jsObject.__prefix) ? (jsObject.__prefix + \":\") : \"\") + elementName + \">\";\r\n\t\t}\r\n\r\n\t\tfunction endsWith(str, suffix) {\r\n\t\t\treturn str.indexOf(suffix, str.length - suffix.length) !== -1;\r\n\t\t}\r\n\r\n\t\tfunction isSpecialProperty(jsonObj, propertyName) {\r\n\t\t\tif ((config.arrayAccessForm === \"property\" && endsWith(propertyName.toString(), (\"_asArray\")))\r\n\t\t\t\t|| propertyName.toString().indexOf(config.attributePrefix) === 0\r\n\t\t\t\t|| propertyName.toString().indexOf(\"__\") === 0\r\n\t\t\t\t|| (jsonObj[propertyName] instanceof Function))\r\n\t\t\t\treturn true;\r\n\t\t\telse\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tfunction getDataElementCount(jsObject) {\r\n\t\t\tvar count = 0;\r\n\r\n\t\t\tif (jsObject instanceof Object) {\r\n\t\t\t\tfor (var propertyName in jsObject) {\r\n\t\t\t\t\tif (isSpecialProperty(jsObject, propertyName))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tcount++;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn count;\r\n\t\t}\r\n\r\n\t\tfunction getDataAttributeNames(jsObject) {\r\n\t\t\tvar names = [];\r\n\r\n\t\t\tif (jsObject instanceof Object) {\r\n\t\t\t\tfor (var attributeName in jsObject) {\r\n\t\t\t\t\tif (attributeName.toString().indexOf(\"__\") === -1\r\n\t\t\t\t\t\t&& attributeName.toString().indexOf(config.attributePrefix) === 0) {\r\n\t\t\t\t\t\tnames.push(attributeName);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn names;\r\n\t\t}\r\n\r\n\t\tfunction serializeComplexTextNodeContents(textNode) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\tif (textNode.__cdata) {\r\n\t\t\t\tresult += \"<![CDATA[\" + textNode.__cdata + \"]]>\";\r\n\t\t\t}\r\n\r\n\t\t\tif (textNode.__text || typeof (textNode.__text) === 'number' || typeof (textNode.__text) === 'boolean') {\r\n\t\t\t\tif (config.escapeMode)\r\n\t\t\t\t\tresult += escapeXmlChars(textNode.__text);\r\n\t\t\t\telse\r\n\t\t\t\t\tresult += textNode.__text;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction serializeTextNodeContents(textNode) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\tif (textNode instanceof Object) {\r\n\t\t\t\tresult += serializeComplexTextNodeContents(textNode);\r\n\t\t\t} else if (textNode !== null) {\r\n\t\t\t\tif (config.escapeMode)\r\n\t\t\t\t\tresult += escapeXmlChars(textNode);\r\n\t\t\t\telse\r\n\t\t\t\t\tresult += textNode;\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction serializeArray(elementArray, elementName, attributes) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\tif (elementArray.length === 0) {\r\n\t\t\t\tresult += serializeStartTag(elementArray, elementName, attributes, true);\r\n\t\t\t} else {\r\n\t\t\t\tfor (var i = 0; i < elementArray.length; i++) {\r\n\t\t\t\t\tresult += serializeJavaScriptObject(elementArray[i], elementName, getDataAttributeNames(elementArray[i]));\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction serializeJavaScriptObject(element, elementName, attributes) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\t// Filter out elements\r\n\t\t\tif (config.jsAttributeFilter && config.jsAttributeFilter.call(null, elementName, element)) {\r\n\t\t\t\treturn result;\r\n\t\t\t}\r\n\t\t\t// Convert element\r\n\t\t\tif (config.jsAttributeConverter) {\r\n\t\t\t\telement = config.jsAttributeConverter.call(null, elementName, element);\r\n\t\t\t}\r\n\t\t\tif ((element === undefined || element === null || element === '') && config.selfClosingElements) {\r\n\t\t\t\tresult += serializeStartTag(element, elementName, attributes, true);\r\n\t\t\t} else if (typeof element === 'object') {\r\n\t\t\t\tif (Object.prototype.toString.call(element) === '[object Array]') {\r\n\t\t\t\t\tresult += serializeArray(element, elementName, attributes);\r\n\t\t\t\t} else if (element instanceof Date) {\r\n\t\t\t\t\tresult += serializeStartTag(element, elementName, attributes, false);\r\n\t\t\t\t\t// Serialize date\r\n\t\t\t\t\tresult += config.jsDateUTC ? element.toUTCString() : element.toISOString();\r\n\t\t\t\t\tresult += serializeEndTag(element, elementName);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar childElementCount = getDataElementCount(element);\r\n\t\t\t\t\tif (childElementCount > 0 || typeof (element.__text) === 'number' || typeof (element.__text) === 'boolean' || element.__text || element.__cdata) {\r\n\t\t\t\t\t\tresult += serializeStartTag(element, elementName, attributes, false);\r\n\t\t\t\t\t\tresult += serializeJavaScriptObjectChildren(element);\r\n\t\t\t\t\t\tresult += serializeEndTag(element, elementName);\r\n\t\t\t\t\t} else if (config.selfClosingElements) {\r\n\t\t\t\t\t\tresult += serializeStartTag(element, elementName, attributes, true);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tresult += serializeStartTag(element, elementName, attributes, false);\r\n\t\t\t\t\t\tresult += serializeEndTag(element, elementName);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tresult += serializeStartTag(element, elementName, attributes, false);\r\n\t\t\t\tresult += serializeTextNodeContents(element);\r\n\t\t\t\tresult += serializeEndTag(element, elementName);\r\n\t\t\t}\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction serializeJavaScriptObjectChildren(jsObject) {\r\n\t\t\tvar result = \"\";\r\n\r\n\t\t\tvar elementCount = getDataElementCount(jsObject);\r\n\r\n\t\t\tif (elementCount > 0) {\r\n\t\t\t\tfor (var elementName in jsObject) {\r\n\t\t\t\t\tif (isSpecialProperty(jsObject, elementName))\r\n\t\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t\tvar element = jsObject[elementName];\r\n\t\t\t\t\tvar attributes = getDataAttributeNames(element);\r\n\r\n\t\t\t\t\tresult += serializeJavaScriptObject(element, elementName, attributes);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tresult += serializeTextNodeContents(jsObject);\r\n\r\n\t\t\treturn result;\r\n\t\t}\r\n\r\n\t\tfunction parseXml(xml) {\r\n\t\t\tif (xml === undefined) {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tif (typeof xml !== \"string\") {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\r\n\t\t\tvar parser = null;\r\n\t\t\tvar domNode = null;\r\n\r\n\t\t\tif (CustomDOMParser) {\r\n\t\t\t\t// This branch is used for node.js, with the xmldom parser.\r\n\t\t\t\tparser = new CustomDOMParser(config.xmldomOptions);\r\n\r\n\t\t\t\tdomNode = parser.parseFromString(xml, \"text/xml\");\r\n\t\t\t} else if (window && window.DOMParser) {\r\n\t\t\t\tparser = new window.DOMParser();\r\n\t\t\t\tvar parsererrorNS = null;\r\n\r\n\t\t\t\tvar isIEParser = window.ActiveXObject || \"ActiveXObject\" in window;\r\n\r\n\t\t\t\t// IE9+ now is here\r\n\t\t\t\tif (!isIEParser && document.all && !document.addEventListener) {\r\n\t\t\t\t\ttry {\r\n\t\t\t\t\t\tparsererrorNS = parser.parseFromString(\"INVALID\", \"text/xml\").childNodes[0].namespaceURI;\r\n\t\t\t\t\t} catch (err) {\r\n\t\t\t\t\t\tparsererrorNS = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttry {\r\n\t\t\t\t\tdomNode = parser.parseFromString(xml, \"text/xml\");\r\n\t\t\t\t\tif (parsererrorNS !== null && domNode.getElementsByTagNameNS(parsererrorNS, \"parsererror\").length > 0) {\r\n\t\t\t\t\t\tdomNode = null;\r\n\t\t\t\t\t}\r\n\t\t\t\t} catch (err) {\r\n\t\t\t\t\tdomNode = null;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\t// IE :(\r\n\t\t\t\tif (xml.indexOf(\"<?\") === 0) {\r\n\t\t\t\t\txml = xml.substr(xml.indexOf(\"?>\") + 2);\r\n\t\t\t\t}\r\n\r\n\t\t\t\t/* global ActiveXObject */\r\n\t\t\t\tdomNode = new ActiveXObject(\"Microsoft.XMLDOM\");\r\n\t\t\t\tdomNode.async = \"false\";\r\n\t\t\t\tdomNode.loadXML(xml);\r\n\t\t\t}\r\n\r\n\t\t\treturn domNode;\r\n\t\t}\r\n\r\n\t\tthis.asArray = function asArray(prop) {\r\n\t\t\tif (prop === undefined || prop === null) {\r\n\t\t\t\treturn [];\r\n\t\t\t} else if (prop instanceof Array) {\r\n\t\t\t\treturn prop;\r\n\t\t\t} else {\r\n\t\t\t\treturn [prop];\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.toXmlDateTime = function toXmlDateTime(dt) {\r\n\t\t\tif (dt instanceof Date) {\r\n\t\t\t\treturn dt.toISOString();\r\n\t\t\t} else if (typeof (dt) === 'number') {\r\n\t\t\t\treturn new Date(dt).toISOString();\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.asDateTime = function asDateTime(prop) {\r\n\t\t\tif (typeof (prop) === \"string\") {\r\n\t\t\t\treturn xmlDateTimeToDate(prop);\r\n\t\t\t} else {\r\n\t\t\t\treturn prop;\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t/*\r\n\t\t\tInternally the logic works in a cycle:\r\n\t\t\tDOM->JS - implemented by custom logic (deserialization).\r\n\t\t\tJS->XML - implemented by custom logic (serialization).\r\n\t\t\tXML->DOM - implemented by browser.\r\n\t\t*/\r\n\r\n\t\t// Transformns an XML string into DOM-tree\r\n\t\tthis.xml2dom = function xml2dom(xml) {\r\n\t\t\treturn parseXml(xml);\r\n\t\t};\r\n\r\n\t\t// Transforms a DOM tree to JavaScript objects.\r\n\t\tthis.dom2js = function dom2js(domNode) {\r\n\t\t\treturn deserializeDomChildren(domNode, null);\r\n\t\t};\r\n\r\n\t\t// Transforms JavaScript objects to a DOM tree.\r\n\t\tthis.js2dom = function js2dom(jsObject) {\r\n\t\t\tvar xml = this.js2xml(jsObject);\r\n\t\t\treturn parseXml(xml);\r\n\t\t};\r\n\r\n\t\t// Transformns an XML string into JavaScript objects.\r\n\t\tthis.xml2js = function xml2js(xml) {\r\n\t\t\tvar domNode = parseXml(xml);\r\n\t\t\tif (domNode != null)\r\n\t\t\t\treturn this.dom2js(domNode);\r\n\t\t\telse\r\n\t\t\t\treturn null;\r\n\t\t};\r\n\r\n\t\t// Transforms JavaScript objects into an XML string.\r\n\t\tthis.js2xml = function js2xml(jsObject) {\r\n\t\t\treturn serializeJavaScriptObjectChildren(jsObject);\r\n\t\t};\r\n\r\n\t\tthis.getVersion = function getVersion() {\r\n\t\t\treturn VERSION;\r\n\t\t};\r\n\t};\r\n});\r\n"],"names":["root","factory","define","amd","module","exports","require","DOMParser","X2JS","this","CustomDOMParser","config","pad","number","r","String","length","arrayAccessForm","emptyNodeForm","jsAttributeFilter","jsAttributeConverter","attributeConverters","datetimeAccessFormPaths","arrayAccessFormPaths","xmldomOptions","undefined","enableToStringFunc","skipEmptyTextNodesForObj","stripWhitespaces","useDoubleQuotes","ignoreRoot","escapeMode","attributePrefix","selfClosingElements","keepCData","keepText","jsDateUTC","prototype","trim","replace","Date","toISOString","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getUTCSeconds","getUTCMilliseconds","toFixed","slice","DOMNodeTypes","ELEMENT_NODE","TEXT_NODE","CDATA_SECTION_NODE","COMMENT_NODE","DOCUMENT_NODE","getDomNodeLocalName","domNode","localName","baseName","nodeName","escapeXmlChars","str","ensureProperArrayAccessForm","element","childName","elementPath","Array","match","i","arrayPath","RegExp","test","xmlDateTimeToDate","prop","bits","split","d","secondBits","setHours","setMilliseconds","offsetMinutes","Number","setMinutes","getMinutes","getTimezoneOffset","indexOf","UTC","getFullYear","getMonth","getDate","getHours","getSeconds","getMilliseconds","deserializeElementChildren","result","__cnt","nodeChildren","childNodes","iChild","child","item","nodeType","deserializeDomChildren","iAttribute","attributes","attribute","adjustedValue","value","iConverter","converter","call","name","convert","namespacePrefix","prefix","__prefix","__text","join","fullPath","pathWithoutTextNode","candidatePath","convertToDateIfRequired","hasOwnProperty","__cdata","Object","keys","toString","node","parentPath","rootElement","children","deserializeRootElementChildren","nodeValue","serializeStartTag","jsObject","elementName","attributeNames","selfClosing","resultStr","attributeName","attributeValue","substr","serializeEndTag","isSpecialProperty","jsonObj","propertyName","suffix","Function","getDataElementCount","count","getDataAttributeNames","names","push","serializeTextNodeContents","textNode","serializeJavaScriptObject","elementArray","serializeArray","toUTCString","serializeJavaScriptObjectChildren","parseXml","xml","parser","parseFromString","window","parsererrorNS","ActiveXObject","document","all","addEventListener","namespaceURI","err","getElementsByTagNameNS","async","loadXML","asArray","toXmlDateTime","dt","asDateTime","xml2dom","dom2js","js2dom","js2xml","xml2js","getVersion"],"mappings":"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"}